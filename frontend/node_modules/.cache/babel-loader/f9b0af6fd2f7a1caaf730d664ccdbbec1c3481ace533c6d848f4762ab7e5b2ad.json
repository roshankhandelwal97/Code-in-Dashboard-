{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://127.0.0.1:8000/api\"; // Adjust for your backend\n\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Optional: If you store the token in localStorage, attach it to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access_token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization"],"sources":["/Users/roshankhandelwal/Roshan/Applications/Fireworks AI Dasboard/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = \"http://127.0.0.1:8000/api\"; // Adjust for your backend\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\n// Optional: If you store the token in localStorage, attach it to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem(\"access_token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAeN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}