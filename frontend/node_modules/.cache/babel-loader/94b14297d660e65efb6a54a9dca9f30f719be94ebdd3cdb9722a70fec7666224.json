{"ast":null,"code":"var _jsxFileName = \"/Users/roshankhandelwal/Roshan/Applications/Fireworks AI Dasboard/frontend/src/pages/DashboardDetailPage.jsx\",\n  _s = $RefreshSig$();\n/* DashboardDetailPage.jsx */\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../services/api\";\nimport Block from \"../components/Block\";\nimport \"./DashboardDetailPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardDetailPage() {\n  _s();\n  var _dashboard$blocks;\n  const {\n    id\n  } = useParams();\n  const [dashboard, setDashboard] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  useEffect(() => {\n    fetchDashboard();\n    // eslint-disable-next-line\n  }, [id]);\n  const fetchDashboard = async () => {\n    try {\n      const response = await api.get(`/dashboard/${id}/`);\n      setDashboard(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleFileChange = e => {\n    if (e.target.files.length > 0) {\n      setSelectedFile(e.target.files[0]);\n    }\n  };\n  const uploadCSV = async () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      await api.post(`/dashboard/${id}/upload/`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"File uploaded successfully\");\n      setSelectedFile(null);\n    } catch (err) {\n      console.error(err);\n      alert(\"File upload error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dashboard-detail__title\",\n      children: [\"Dashboard: \", dashboard === null || dashboard === void 0 ? void 0 : dashboard.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-detail__upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"dashboard-detail__upload-label\",\n        children: [\"Upload CSV:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleFileChange,\n          className: \"dashboard-detail__upload-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard-detail__upload-btn\",\n        onClick: uploadCSV,\n        disabled: !selectedFile,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-detail__blocks\",\n      children: dashboard === null || dashboard === void 0 ? void 0 : (_dashboard$blocks = dashboard.blocks) === null || _dashboard$blocks === void 0 ? void 0 : _dashboard$blocks.map(block => /*#__PURE__*/_jsxDEV(Block, {\n        block: block,\n        onBlockChange: fetchDashboard\n      }, block.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardDetailPage, \"Nxo9H+9zKdNPAOp3BOB8e2znynM=\", false, function () {\n  return [useParams];\n});\n_c = DashboardDetailPage;\nexport default DashboardDetailPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","api","Block","jsxDEV","_jsxDEV","DashboardDetailPage","_s","_dashboard$blocks","id","dashboard","setDashboard","selectedFile","setSelectedFile","fetchDashboard","response","get","data","error","console","handleFileChange","e","target","files","length","uploadCSV","formData","FormData","append","post","headers","alert","err","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","blocks","map","block","onBlockChange","_c","$RefreshReg$"],"sources":["/Users/roshankhandelwal/Roshan/Applications/Fireworks AI Dasboard/frontend/src/pages/DashboardDetailPage.jsx"],"sourcesContent":["/* DashboardDetailPage.jsx */\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../services/api\";\nimport Block from \"../components/Block\";\nimport \"./DashboardDetailPage.css\";\n\nfunction DashboardDetailPage() {\n  const { id } = useParams();\n  const [dashboard, setDashboard] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  useEffect(() => {\n    fetchDashboard();\n    // eslint-disable-next-line\n  }, [id]);\n\n  const fetchDashboard = async () => {\n    try {\n      const response = await api.get(`/dashboard/${id}/`);\n      setDashboard(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleFileChange = (e) => {\n    if (e.target.files.length > 0) {\n      setSelectedFile(e.target.files[0]);\n    }\n  };\n\n  const uploadCSV = async () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      await api.post(`/dashboard/${id}/upload/`, formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      alert(\"File uploaded successfully\");\n      setSelectedFile(null);\n    } catch (err) {\n      console.error(err);\n      alert(\"File upload error\");\n    }\n  };\n\n  return (\n    <div className=\"dashboard-detail\">\n      <h2 className=\"dashboard-detail__title\">\n        Dashboard: {dashboard?.title}\n      </h2>\n\n      {/* CSV Upload Section */}\n      <div className=\"dashboard-detail__upload\">\n        <label className=\"dashboard-detail__upload-label\">\n          Upload CSV:\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleFileChange}\n            className=\"dashboard-detail__upload-input\"\n          />\n        </label>\n        <button\n          className=\"dashboard-detail__upload-btn\"\n          onClick={uploadCSV}\n          disabled={!selectedFile}\n        >\n          Upload\n        </button>\n      </div>\n\n      {/* Blocks Section */}\n      <div className=\"dashboard-detail__blocks\">\n        {dashboard?.blocks?.map((block) => (\n          <Block\n            key={block.id}\n            block={block}\n            onBlockChange={fetchDashboard}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DashboardDetailPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}