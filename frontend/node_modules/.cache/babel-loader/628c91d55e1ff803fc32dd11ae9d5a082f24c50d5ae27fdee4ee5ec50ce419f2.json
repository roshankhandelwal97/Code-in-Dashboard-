{"ast":null,"code":"var _jsxFileName = \"/Users/roshankhandelwal/Roshan/Applications/Fireworks AI Dasboard/frontend/src/components/CodeBlock.jsx\",\n  _s = $RefreshSig$();\n// src/components/CodeBlock.jsx\nimport React, { useState } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport api from \"../services/api\";\nimport \"codemirror/lib/codemirror.css\"; // codemirror default CSS\nimport \"codemirror/mode/python/python\"; // python syntax highlighting\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeBlock({\n  block,\n  onBlockChange\n}) {\n  _s();\n  var _block$codeblock, _block$codeblock2;\n  const [code, setCode] = useState(((_block$codeblock = block.codeblock) === null || _block$codeblock === void 0 ? void 0 : _block$codeblock.code) || \"\");\n  const [output, setOutput] = useState(((_block$codeblock2 = block.codeblock) === null || _block$codeblock2 === void 0 ? void 0 : _block$codeblock2.output) || \"\");\n  const handleRunCode = async () => {\n    try {\n      // Update the code block first (optional step)\n      await api.put(`/dashboard/blocks/${block.id}/`, {\n        block_type: \"code\",\n        codeblock: {\n          language: \"python\",\n          code\n        },\n        position: block.position\n      });\n\n      // Then call the /run/ endpoint\n      const response = await api.post(`/dashboard/blocks/${block.id}/run/`);\n      // The updated block (including output) is returned\n      setOutput(response.data.codeblock.output);\n      onBlockChange(); // Refresh parent if needed\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"8px\",\n      margin: \"8px 0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Code Block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeMirror, {\n      value: code,\n      options: {\n        mode: \"python\",\n        theme: \"default\",\n        lineNumbers: true\n      },\n      onBeforeChange: (editor, data, value) => {\n        setCode(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRunCode,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        backgroundColor: \"#f4f4f4\",\n        padding: \"8px\"\n      },\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeBlock, \"h107GzMEgAW3P5VhzxSFfTc7wiU=\");\n_c = CodeBlock;\nexport default CodeBlock;\nvar _c;\n$RefreshReg$(_c, \"CodeBlock\");","map":{"version":3,"names":["React","useState","Controlled","CodeMirror","api","jsxDEV","_jsxDEV","CodeBlock","block","onBlockChange","_s","_block$codeblock","_block$codeblock2","code","setCode","codeblock","output","setOutput","handleRunCode","put","id","block_type","language","position","response","post","data","err","console","error","style","border","padding","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","value","options","mode","theme","lineNumbers","onBeforeChange","editor","onClick","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/roshankhandelwal/Roshan/Applications/Fireworks AI Dasboard/frontend/src/components/CodeBlock.jsx"],"sourcesContent":["// src/components/CodeBlock.jsx\nimport React, { useState } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport api from \"../services/api\";\nimport \"codemirror/lib/codemirror.css\"; // codemirror default CSS\nimport \"codemirror/mode/python/python\"; // python syntax highlighting\n\nfunction CodeBlock({ block, onBlockChange }) {\n  const [code, setCode] = useState(block.codeblock?.code || \"\");\n  const [output, setOutput] = useState(block.codeblock?.output || \"\");\n\n  const handleRunCode = async () => {\n    try {\n      // Update the code block first (optional step)\n      await api.put(`/dashboard/blocks/${block.id}/`, {\n        block_type: \"code\",\n        codeblock: {\n          language: \"python\",\n          code,\n        },\n        position: block.position,\n      });\n\n      // Then call the /run/ endpoint\n      const response = await api.post(`/dashboard/blocks/${block.id}/run/`);\n      // The updated block (including output) is returned\n      setOutput(response.data.codeblock.output);\n      onBlockChange(); // Refresh parent if needed\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div style={{ border: \"1px solid #ccc\", padding: \"8px\", margin: \"8px 0\" }}>\n      <h4>Code Block</h4>\n      <CodeMirror\n        value={code}\n        options={{\n          mode: \"python\",\n          theme: \"default\",\n          lineNumbers: true,\n        }}\n        onBeforeChange={(editor, data, value) => {\n          setCode(value);\n        }}\n      />\n      <br />\n      <button onClick={handleRunCode}>Run</button>\n      <pre style={{ backgroundColor: \"#f4f4f4\", padding: \"8px\" }}>\n        {output}\n      </pre>\n    </div>\n  );\n}\n\nexport default CodeBlock;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}